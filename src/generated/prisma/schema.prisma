generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int           @id @default(autoincrement())
  name          String?
  email         String?       @unique
  emailVerified Boolean       @default(false)
  image         String?
  password      String?
  gender        String?
  birthDate     DateTime?
  country       String?
  city          String?
  university    String?
  career        String?
  accounts      Account[]
  dispositivos  Dispositivo[]
  componentes   Componente[]
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Dispositivo {
  id_dispositivo   Int                    @id @default(autoincrement())
  nombre           String
  marca            String
  modelo           String
  año_fabricacion Int
  estado_general   EstadoGeneral
  resultado        ResultadoClasificacion
  justificacion    String?
  descripcion      String?
  categoria        String?
  numero           String?                @unique
  ubicacion        String?
  fecha_registro   DateTime               @default(now())
  id_usuario       Int
  usuario          User                   @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
}

model Componente {
  id_componente    Int                    @id @default(autoincrement())
  tipo_componente  String
  estado_general   EstadoGeneral
  resultado        ResultadoClasificacion
  justificacion    String?
  observaciones    String?
  marca            String?
  modelo           String?
  numero           String?                @unique
  fecha_extraccion DateTime?
  ubicacion        String?
  id_usuario       Int
  usuario          User                   @relation(fields: [id_usuario], references: [id], onDelete: Cascade)
}

enum ResultadoClasificacion {
  REUTILIZAR
  RECICLAR
  DESECHABLE
}

enum EstadoGeneral {
  FUNCIONAL
  PARCIALMENTE_FUNCIONAL
  DAÑADO
}
